IDENTIFICATION DIVSION.
PROGRAM-ID.  AssemblerNand2Tetris 
AUTHOR.  David G. Smith
FILE-CONTROL.
    SELECT CompTableFile ASSIGN TO "CompTable.txt" ORGANIZATION IS LINE SEQUENTIAL.
    SELECT DestTableFile ASSIGN TO "DestTable.txt" ORGANIZATION IS LINE SEQUENTIAL.
    SELECT JumpTableFile ASSIGN TO "JumpTable.txt" ORGANIZATION IS LINE SEQUENTIAL.
    SELECT PreDefTableFile ASSIGN TO "PreDefTable.txt" ORGANIZATION IS LINE SEQUENTIAL.
DATA DIVISION.
FILE SECTION.
FD CompTableFile.
01 CompTable.
	02 CompBin OCCURS 28 TIME X(7).
	02 CompAsm OCCURS 28 TIMES XXX.
FD DestTableFile.
01 DestTable.
    02 DestBin OCCURS 8 TIMES X(6).
    02 DestAsm OCCURS 4 TIMES X(4).
FD JumpTableFile.
01 JumpTable.
    02 JumpBin OCCURS 8 TIMES X(3).
    02 JumpAsm OCCURS 8 TIMES X(4).
FD PreDefTableFile.
01 PreDefTable.
    02 PreDefInt OCCURS 23 TIMES X(16).
    02 PreDefAsm OCCURS 23 TIMES X(6).
FD DataFile.  *>This is where the name of the file goes.  Will do user input name later.
FD OutputFile. 
WORKING-STORAGE SECTION.
01  ROMAddress PIC 9(5) VALUE ZEROS.
01  RAMAddress PIC 9(5) VALUE 16.
01  UserDefTable.
    02 UserDefSym OCCURS 500 TIMES X(80).
    02 UserDefBin OCCURS 500 TIMES X(16).
01  InputData.
    02 Lines OCCURS 1000 TIMES X(80).
01  CurrentLine PIC X(80).
01  LineIndex PIC 9(4).
01  OutputData.
    02 BinLines OCCURS 1000 TIMES x(80).
ENVIRONMENT DEVISION.
INOUT-OUTPUT SECTION.
PROCEDURE DIVISION.
Begin.
    OPEN INPUT CompTableFile
    READ CompTableFile
       AT END MOVE HIGH-VALUES TO CompTable
    END-READ
    PERFORM UNTIL CompTable = HIGH-VALUES
       DISPLAY CompAsm SPACE CompBin
       READ CompTableFile
          AT END MOVE HIGH-VALUES TO CompTable
       END-READ
    END-PERFORM
    CLOSE CompTableFile
    STOP RUN.
*>  Build compDestJumpPredef tables
*>  first pass - if array has more lines advance
*>    ignore comments and white toclassify
*>    A or C - romAddress++
*>    L - put in userdef table with romAddress binary
*>  reset to front of array
*>  second pass- if array has more lines advance
*>    ignore cooments and white space to classify
*>      A Cmd - remove @
*>        If numeric convert to binary and write to file
*>        else if predef lookup binary and write to file
*>        else if userdef lookup binary and write to file
*>        else if new, add to userdef with ramAddress then ramAddress++
*>      C Cmd
*>        if contains "=" lookup comp and concat with lookup dest
*>        else if xontains ";" lookup comp and concat with lookup jump
*>        concat 111 to front of string
*>        write to file
*>    close file
